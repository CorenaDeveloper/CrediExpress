// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Credi_Express.Models;

public partial class pagosContext : DbContext
{
    public pagosContext(DbContextOptions<pagosContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Calendario> Calendarios { get; set; }

    public virtual DbSet<CalendarioPago> CalendarioPagos { get; set; }

    public virtual DbSet<Cliente> Clientes { get; set; }

    public virtual DbSet<Departamento> Departamentos { get; set; }

    public virtual DbSet<Eliminadoshistorico> Eliminadoshistoricos { get; set; }

    public virtual DbSet<Gestor> Gestors { get; set; }

    public virtual DbSet<Infored> Inforeds { get; set; }

    public virtual DbSet<Login> Logins { get; set; }

    public virtual DbSet<Pagosdetalle> Pagosdetalles { get; set; }

    public virtual DbSet<Pagosdetalleantigua> Pagosdetalleantiguas { get; set; }

    public virtual DbSet<Permiso> Permisos { get; set; }

    public virtual DbSet<Prestamo> Prestamos { get; set; }

    public virtual DbSet<Puesto> Puestos { get; set; }

    public virtual DbSet<PuestoPermiso> PuestoPermisos { get; set; }

    public virtual DbSet<VistaPagosCompletum> VistaPagosCompleta { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb3_general_ci")
            .HasCharSet("utf8mb3");

        modelBuilder.Entity<Calendario>(entity =>
        {
            entity.HasKey(e => e.Idcalendario).HasName("PRIMARY");

            entity.ToTable("calendario");

            entity.HasIndex(e => e.Idcalendario, "IDCALENDARIO_UNIQUE").IsUnique();

            entity.Property(e => e.Idcalendario).HasColumnName("IDCALENDARIO");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(205)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.Fecha).HasColumnName("FECHA");
        });

        modelBuilder.Entity<CalendarioPago>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("calendario_pagos", tb => tb.HasComment("Calendario de pagos por cuotas de cada préstamo"));

            entity.HasIndex(e => e.CreadoPor, "creado_por");

            entity.HasIndex(e => e.Estado, "idx_estado");

            entity.HasIndex(e => e.FechaProgramada, "idx_fecha_programada");

            entity.HasIndex(e => e.IdPrestamo, "idx_prestamo");

            entity.HasIndex(e => new { e.IdPrestamo, e.NumeroCuota }, "idx_prestamo_cuota").IsUnique();

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Capital)
                .HasPrecision(10, 2)
                .HasDefaultValueSql("'0.00'")
                .HasColumnName("capital");
            entity.Property(e => e.CreadoPor).HasColumnName("creado_por");
            entity.Property(e => e.DiasMora)
                .HasDefaultValueSql("'0'")
                .HasColumnName("dias_mora");
            entity.Property(e => e.Domicilio)
                .HasPrecision(10, 2)
                .HasColumnName("domicilio");
            entity.Property(e => e.Estado)
                .HasDefaultValueSql("'PENDIENTE'")
                .HasColumnType("enum('PENDIENTE','PAGADO','VENCIDO','PARCIAL')")
                .HasColumnName("estado");
            entity.Property(e => e.FechaActualizacion)
                .ValueGeneratedOnAddOrUpdate()
                .HasDefaultValueSql("CURRENT_TIMESTAMP")
                .HasColumnType("timestamp")
                .HasColumnName("fecha_actualizacion");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("CURRENT_TIMESTAMP")
                .HasColumnType("timestamp")
                .HasColumnName("fecha_creacion");
            entity.Property(e => e.FechaPagoReal).HasColumnName("fecha_pago_real");
            entity.Property(e => e.FechaProgramada).HasColumnName("fecha_programada");
            entity.Property(e => e.IdPrestamo).HasColumnName("id_prestamo");
            entity.Property(e => e.Interes)
                .HasPrecision(10, 2)
                .HasDefaultValueSql("'0.00'")
                .HasColumnName("interes");
            entity.Property(e => e.MontoCuota)
                .HasPrecision(10, 2)
                .HasColumnName("monto_cuota");
            entity.Property(e => e.MontoPagado)
                .HasPrecision(10, 2)
                .HasDefaultValueSql("'0.00'")
                .HasColumnName("monto_pagado");
            entity.Property(e => e.Mora)
                .HasPrecision(10, 2)
                .HasDefaultValueSql("'0.00'")
                .HasColumnName("mora");
            entity.Property(e => e.NumeroCuota).HasColumnName("numero_cuota");
            entity.Property(e => e.Observaciones)
                .HasColumnType("text")
                .HasColumnName("observaciones");

            entity.HasOne(d => d.CreadoPorNavigation).WithMany(p => p.CalendarioPagos)
                .HasForeignKey(d => d.CreadoPor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("calendario_pagos_ibfk_2");

            entity.HasOne(d => d.IdPrestamoNavigation).WithMany(p => p.CalendarioPagos)
                .HasForeignKey(d => d.IdPrestamo)
                .HasConstraintName("calendario_pagos_ibfk_1");
        });

        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("cliente");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Activo).HasColumnName("ACTIVO");
            entity.Property(e => e.Apellido)
                .HasMaxLength(50)
                .HasColumnName("APELLIDO");
            entity.Property(e => e.Celular)
                .HasMaxLength(50)
                .HasColumnName("CELULAR");
            entity.Property(e => e.Departamento)
                .HasMaxLength(50)
                .HasColumnName("DEPARTAMENTO");
            entity.Property(e => e.Direccion)
                .HasMaxLength(300)
                .HasColumnName("DIRECCION");
            entity.Property(e => e.Dui)
                .HasMaxLength(50)
                .HasColumnName("DUI");
            entity.Property(e => e.DuiDetras)
                .HasMaxLength(255)
                .HasColumnName("DUI_DETRAS");
            entity.Property(e => e.DuiFrente)
                .HasMaxLength(255)
                .HasColumnName("DUI_FRENTE");
            entity.Property(e => e.Email)
                .HasMaxLength(60)
                .HasColumnName("EMAIL");
            entity.Property(e => e.FechaIngreso).HasColumnName("FECHA_INGRESO");
            entity.Property(e => e.FechaNacimiento).HasColumnName("FECHA_NACIMIENTO");
            entity.Property(e => e.Fotonegocio1)
                .HasMaxLength(255)
                .HasColumnName("FOTONEGOCIO1");
            entity.Property(e => e.Fotonegocio2)
                .HasMaxLength(255)
                .HasColumnName("FOTONEGOCIO2");
            entity.Property(e => e.Fotonegocio3)
                .HasMaxLength(255)
                .HasColumnName("FOTONEGOCIO3");
            entity.Property(e => e.Fotonegocio4)
                .HasMaxLength(255)
                .HasColumnName("FOTONEGOCIO4");
            entity.Property(e => e.Giro)
                .HasMaxLength(50)
                .HasColumnName("GIRO");
            entity.Property(e => e.Idgestor).HasColumnName("IDGESTOR");
            entity.Property(e => e.Latitud)
                .HasPrecision(10, 6)
                .HasColumnName("LATITUD");
            entity.Property(e => e.Longitud)
                .HasPrecision(10, 6)
                .HasColumnName("LONGITUD");
            entity.Property(e => e.Nit)
                .HasMaxLength(50)
                .HasColumnName("NIT");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .HasColumnName("NOMBRE");
            entity.Property(e => e.Profesion)
                .HasMaxLength(255)
                .HasColumnName("PROFESION");
            entity.Property(e => e.Referencia1)
                .HasMaxLength(50)
                .HasColumnName("REFERENCIA1");
            entity.Property(e => e.Referencia2)
                .HasMaxLength(50)
                .HasColumnName("REFERENCIA2");
            entity.Property(e => e.Sexo)
                .HasMaxLength(50)
                .HasColumnName("SEXO");
            entity.Property(e => e.Telefono)
                .HasMaxLength(50)
                .HasColumnName("TELEFONO");
            entity.Property(e => e.Telref1)
                .HasMaxLength(45)
                .HasColumnName("TELREF1");
            entity.Property(e => e.Telref2)
                .HasMaxLength(45)
                .HasColumnName("TELREF2");
            entity.Property(e => e.TipoPer)
                .HasMaxLength(50)
                .HasColumnName("TIPO_PER");
        });

        modelBuilder.Entity<Departamento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("departamento");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Codigodep)
                .HasMaxLength(50)
                .HasColumnName("CODIGODEP");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .HasColumnName("NOMBRE");
        });

        modelBuilder.Entity<Eliminadoshistorico>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("eliminadoshistorico");

            entity.Property(e => e.Capital)
                .HasPrecision(8, 2)
                .HasColumnName("CAPITAL");
            entity.Property(e => e.FechaCouta).HasColumnName("FECHA_COUTA");
            entity.Property(e => e.FechaPago).HasColumnName("FECHA_PAGO");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Idprestamo).HasColumnName("IDPRESTAMO");
            entity.Property(e => e.Interes)
                .HasPrecision(8, 2)
                .HasColumnName("INTERES");
            entity.Property(e => e.Monto)
                .HasPrecision(8, 2)
                .HasColumnName("MONTO");
            entity.Property(e => e.Mora)
                .HasPrecision(8, 2)
                .HasColumnName("MORA");
            entity.Property(e => e.Morahist)
                .HasPrecision(8, 2)
                .HasColumnName("MORAHIST");
            entity.Property(e => e.Numeropago).HasColumnName("NUMEROPAGO");
            entity.Property(e => e.Pagado).HasColumnName("PAGADO");
        });

        modelBuilder.Entity<Gestor>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("gestor");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Activo).HasColumnName("ACTIVO");
            entity.Property(e => e.Apellido)
                .HasMaxLength(50)
                .HasColumnName("APELLIDO");
            entity.Property(e => e.Departamento).HasColumnName("DEPARTAMENTO");
            entity.Property(e => e.Direccion)
                .HasMaxLength(300)
                .HasColumnName("DIRECCION");
            entity.Property(e => e.Idpuesto).HasColumnName("IDPUESTO");
            entity.Property(e => e.Idusuario).HasColumnName("IDUSUARIO");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .HasColumnName("NOMBRE");
            entity.Property(e => e.Telefono)
                .HasMaxLength(50)
                .HasColumnName("TELEFONO");
        });

        modelBuilder.Entity<Infored>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("infored");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActiviEco)
                .HasMaxLength(100)
                .HasColumnName("activi_eco");
            entity.Property(e => e.Año).HasColumnName("AÑO");
            entity.Property(e => e.CalifAct)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("calif_act");
            entity.Property(e => e.Dia).HasColumnName("dia");
            entity.Property(e => e.Dias).HasColumnName("dias");
            entity.Property(e => e.Diasvencido).HasColumnName("DIASVENCIDO");
            entity.Property(e => e.Dui)
                .HasMaxLength(50)
                .HasColumnName("DUI");
            entity.Property(e => e.Estado).HasColumnName("ESTADO");
            entity.Property(e => e.FecOtor)
                .HasMaxLength(100)
                .HasColumnName("fec_otor");
            entity.Property(e => e.FechaCancelado).HasColumnName("FECHA_CANCELADO");
            entity.Property(e => e.FechaNacimiento).HasColumnName("FECHA_NACIMIENTO");
            entity.Property(e => e.FormaPag).HasColumnName("forma_pag");
            entity.Property(e => e.Inst)
                .HasMaxLength(100)
                .HasColumnName("inst");
            entity.Property(e => e.LineaCre)
                .HasMaxLength(50)
                .HasColumnName("linea_cre");
            entity.Property(e => e.Mes).HasColumnName("MES");
            entity.Property(e => e.Monto)
                .HasPrecision(10, 4)
                .HasColumnName("MONTO");
            entity.Property(e => e.Mora)
                .HasPrecision(10, 4)
                .HasColumnName("MORA");
            entity.Property(e => e.Nit)
                .HasMaxLength(50)
                .HasColumnName("NIT");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .HasColumnName("NOMBRE");
            entity.Property(e => e.NumCoutas).HasColumnName("NUM_COUTAS");
            entity.Property(e => e.NumPtmo).HasColumnName("Num_ptmo");
            entity.Property(e => e.Plazo)
                .HasPrecision(10, 4)
                .HasColumnName("plazo");
            entity.Property(e => e.Saldo)
                .HasPrecision(10, 4)
                .HasColumnName("SALDO");
            entity.Property(e => e.Sexo)
                .HasMaxLength(50)
                .HasColumnName("SEXO");
            entity.Property(e => e.TipoGar)
                .HasMaxLength(100)
                .HasColumnName("tipo_gar");
            entity.Property(e => e.TipoMon).HasColumnName("tipo_mon");
            entity.Property(e => e.TipoPer)
                .HasMaxLength(50)
                .HasColumnName("TIPO_PER");
            entity.Property(e => e.TipoRel).HasColumnName("tipo_rel");
            entity.Property(e => e.UltPag).HasColumnName("ult_pag");
            entity.Property(e => e.Valcuota)
                .HasPrecision(10, 4)
                .HasColumnName("VALCUOTA");
        });

        modelBuilder.Entity<Login>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("login");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Activo)
                .HasColumnType("bit(1)")
                .HasColumnName("ACTIVO");
            entity.Property(e => e.Password)
                .HasMaxLength(50)
                .HasColumnName("PASSWORD");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .HasColumnName("USUARIO");
        });

        modelBuilder.Entity<Pagosdetalle>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("pagosdetalle");

            entity.HasIndex(e => e.Idprestamo, "IDPRESTAMO");

            entity.HasIndex(e => e.TipoMovimiento, "idx_tipo_movimiento");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Capital)
                .HasPrecision(8, 2)
                .HasColumnName("CAPITAL");
            entity.Property(e => e.CorteCaja)
                .HasDefaultValueSql("b'0'")
                .HasColumnType("bit(1)")
                .HasColumnName("corteCaja");
            entity.Property(e => e.CreadoPor).HasColumnName("CREADO_POR");
            entity.Property(e => e.Domicilio)
                .HasPrecision(8, 2)
                .HasColumnName("DOMICILIO");
            entity.Property(e => e.FechaCouta).HasColumnName("FECHA_COUTA");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("CURRENT_TIMESTAMP")
                .HasColumnType("timestamp")
                .HasColumnName("FECHA_CREACION");
            entity.Property(e => e.FechaPago).HasColumnName("FECHA_PAGO");
            entity.Property(e => e.Idprestamo).HasColumnName("IDPRESTAMO");
            entity.Property(e => e.Interes)
                .HasPrecision(8, 2)
                .HasColumnName("INTERES");
            entity.Property(e => e.Monto)
                .HasPrecision(8, 2)
                .HasColumnName("MONTO");
            entity.Property(e => e.Mora)
                .HasPrecision(8, 2)
                .HasColumnName("MORA");
            entity.Property(e => e.Morahist)
                .HasPrecision(8, 2)
                .HasColumnName("MORAHIST");
            entity.Property(e => e.Numeropago).HasColumnName("NUMEROPAGO");
            entity.Property(e => e.ObservacionesMovimiento)
                .HasColumnType("text")
                .HasColumnName("OBSERVACIONES_MOVIMIENTO");
            entity.Property(e => e.Pagado).HasColumnName("PAGADO");
            entity.Property(e => e.ReferenciaPrestamo)
                .HasComment("ID del préstamo relacionado")
                .HasColumnName("REFERENCIA_PRESTAMO");
            entity.Property(e => e.TipoMovimiento)
                .HasMaxLength(20)
                .HasDefaultValueSql("'COBRO'")
                .HasComment("COBRO, DESEMBOLSO")
                .HasColumnName("TIPO_MOVIMIENTO");
            entity.Property(e => e.TipoPago)
                .HasMaxLength(60)
                .HasColumnName("TIPO_PAGO");

            entity.HasOne(d => d.IdprestamoNavigation).WithMany(p => p.Pagosdetalles)
                .HasForeignKey(d => d.Idprestamo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("pagosdetalle_ibfk_1");
        });

        modelBuilder.Entity<Pagosdetalleantigua>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("pagosdetalleantigua");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Capital)
                .HasPrecision(8, 2)
                .HasColumnName("CAPITAL");
            entity.Property(e => e.FechaCouta).HasColumnName("FECHA_COUTA");
            entity.Property(e => e.FechaPago).HasColumnName("FECHA_PAGO");
            entity.Property(e => e.Idprestamo).HasColumnName("IDPRESTAMO");
            entity.Property(e => e.Interes)
                .HasPrecision(8, 2)
                .HasColumnName("INTERES");
            entity.Property(e => e.Monto)
                .HasPrecision(8, 2)
                .HasColumnName("MONTO");
            entity.Property(e => e.Mora)
                .HasPrecision(8, 2)
                .HasColumnName("MORA");
            entity.Property(e => e.Numeropago).HasColumnName("NUMEROPAGO");
            entity.Property(e => e.Pagado).HasColumnName("PAGADO");
        });

        modelBuilder.Entity<Permiso>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("permisos");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Modulo)
                .HasMaxLength(120)
                .HasColumnName("modulo");
            entity.Property(e => e.Permiso1)
                .HasMaxLength(60)
                .HasColumnName("permiso");
        });

        modelBuilder.Entity<Prestamo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("prestamos");

            entity.HasIndex(e => e.Idcliente, "IDCLIENTE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Aprobado)
                .HasColumnType("bit(1)")
                .HasColumnName("APROBADO");
            entity.Property(e => e.AprobadoPor).HasColumnName("APROBADO_POR");
            entity.Property(e => e.CreadaPor).HasColumnName("CREADA_POR");
            entity.Property(e => e.Cuota)
                .HasPrecision(8, 2)
                .HasColumnName("CUOTA");
            entity.Property(e => e.DetalleAprobado)
                .HasMaxLength(60)
                .HasColumnName("DETALLE_APROBADO");
            entity.Property(e => e.DetalleRechazo)
                .HasMaxLength(255)
                .HasColumnName("DETALLE_RECHAZO");
            entity.Property(e => e.Domicilio)
                .HasPrecision(8, 2)
                .HasColumnName("DOMICILIO");
            entity.Property(e => e.Estado)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("ESTADO");
            entity.Property(e => e.Fecha).HasColumnName("FECHA");
            entity.Property(e => e.FechaAprobacion).HasColumnName("FECHA_APROBACION");
            entity.Property(e => e.FechaCancelado).HasColumnName("FECHA_CANCELADO");
            entity.Property(e => e.FechaCreadafecha).HasColumnName("FECHA_CREADAFECHA");
            entity.Property(e => e.FechaRechazado).HasColumnName("FECHA_RECHAZADO");
            entity.Property(e => e.FechaReenvio).HasColumnName("FECHA_REENVIO");
            entity.Property(e => e.Idcliente).HasColumnName("IDCLIENTE");
            entity.Property(e => e.Interes)
                .HasPrecision(8, 2)
                .HasColumnName("INTERES");
            entity.Property(e => e.Monto)
                .HasPrecision(8, 2)
                .HasColumnName("MONTO");
            entity.Property(e => e.NumCoutas).HasColumnName("NUM_COUTAS");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(555)
                .HasColumnName("OBSERVACIONES");
            entity.Property(e => e.ProximoPago).HasColumnName("PROXIMO_PAGO");
            entity.Property(e => e.RechazadoPor).HasColumnName("RECHAZADO_POR");
            entity.Property(e => e.ReenviadoPor).HasColumnName("REENVIADO_POR");
            entity.Property(e => e.Tasa)
                .HasPrecision(8, 2)
                .HasColumnName("TASA");
            entity.Property(e => e.TasaDomicilio)
                .HasPrecision(8, 2)
                .HasColumnName("TASA_DOMICILIO");
            entity.Property(e => e.TipoPrestamo)
                .HasMaxLength(60)
                .HasColumnName("TIPO_PRESTAMO");

            entity.HasOne(d => d.IdclienteNavigation).WithMany(p => p.Prestamos)
                .HasForeignKey(d => d.Idcliente)
                .HasConstraintName("prestamos_ibfk_1");
        });

        modelBuilder.Entity<Puesto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("puestos");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Nombre)
                .HasMaxLength(255)
                .HasColumnName("NOMBRE");
        });

        modelBuilder.Entity<PuestoPermiso>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("puesto_permisos");

            entity.HasIndex(e => e.Id, "Id_UNIQUE").IsUnique();

            entity.Property(e => e.Activo).HasColumnType("bit(1)");
        });

        modelBuilder.Entity<VistaPagosCompletum>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vista_pagos_completa");

            entity.Property(e => e.Capital)
                .HasPrecision(10, 2)
                .HasDefaultValueSql("'0.00'")
                .HasColumnName("capital");
            entity.Property(e => e.Celular)
                .HasMaxLength(50)
                .HasColumnName("CELULAR");
            entity.Property(e => e.DiasMora)
                .HasDefaultValueSql("'0'")
                .HasColumnName("dias_mora");
            entity.Property(e => e.DiasVencimientoCalculado).HasColumnName("dias_vencimiento_calculado");
            entity.Property(e => e.Dui)
                .HasMaxLength(50)
                .HasColumnName("DUI");
            entity.Property(e => e.Estado)
                .HasDefaultValueSql("'PENDIENTE'")
                .HasColumnType("enum('PENDIENTE','PAGADO','VENCIDO','PARCIAL')")
                .HasColumnName("estado");
            entity.Property(e => e.FechaPagoReal).HasColumnName("fecha_pago_real");
            entity.Property(e => e.FechaProgramada).HasColumnName("fecha_programada");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdPrestamo).HasColumnName("id_prestamo");
            entity.Property(e => e.Idcliente).HasColumnName("IDCLIENTE");
            entity.Property(e => e.Interes)
                .HasPrecision(10, 2)
                .HasDefaultValueSql("'0.00'")
                .HasColumnName("interes");
            entity.Property(e => e.MontoCuota)
                .HasPrecision(10, 2)
                .HasColumnName("monto_cuota");
            entity.Property(e => e.MontoPagado)
                .HasPrecision(10, 2)
                .HasDefaultValueSql("'0.00'")
                .HasColumnName("monto_pagado");
            entity.Property(e => e.MontoPrestamo)
                .HasPrecision(8, 2)
                .HasColumnName("monto_prestamo");
            entity.Property(e => e.Mora)
                .HasPrecision(10, 2)
                .HasDefaultValueSql("'0.00'")
                .HasColumnName("mora");
            entity.Property(e => e.NombreCliente)
                .HasMaxLength(101)
                .HasColumnName("nombre_cliente");
            entity.Property(e => e.NombreGestor)
                .HasMaxLength(101)
                .HasColumnName("nombre_gestor");
            entity.Property(e => e.NumCoutas).HasColumnName("NUM_COUTAS");
            entity.Property(e => e.NumeroCuota).HasColumnName("numero_cuota");
            entity.Property(e => e.Observaciones)
                .HasColumnType("text")
                .HasColumnName("observaciones");
            entity.Property(e => e.Tasa)
                .HasPrecision(8, 2)
                .HasColumnName("TASA");
            entity.Property(e => e.Telefono)
                .HasMaxLength(50)
                .HasColumnName("TELEFONO");
            entity.Property(e => e.TipoDia)
                .HasMaxLength(218)
                .HasColumnName("tipo_dia");
            entity.Property(e => e.TipoPrestamo)
                .HasMaxLength(60)
                .HasColumnName("TIPO_PRESTAMO");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}